input {
    file {
        path => "/root/rsi_final.log"
        start_position => beginning
        codec => multiline {
           #pattern => "^%{TIMESTAMP_ISO8601} "
           pattern => "^\[%{TIMESTAMP_ISO8601:timestamp}\]"
           negate => "true"
           what => "previous"
        }
    }
}
filter {
    grok {
        match => { "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\] \[(%{DATA:default_task})\] : %{LOGLEVEL:log_level}%{SPACE}%{WORD:class}%{GREEDYDATA:data_message}"}
        #match => { "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\] \[(?<def>default task-%{DATA:default_task})\] : %{LOGLEVEL:log_level}%{SPACE}%{WORD:class}%{GREEDYDATA:data_message}"}
        #match => { "message" => "%{TIMESTAMP_ISO8601:timestamp}%{INT}%{SPACE}%{NOTSPACE} \[(?<def>default task-%{DATA:default_task})\] : %{LOGLEVEL:log_level}%{SPACE}%{WORD:class}%{GREEDYDATA:data_message}"}
        add_field => [ "received_at", "%{@timestamp}" ]
        add_field => [ "received_from", "%{host}" ]
	add_tag => [ "RSI_Data"]
        overwrite => ["message"]
    }
    date {
        locale=>"en"
        match => [ "timestamp", "yyyy-MM-dd HH:mm:ss,SSS" ]
        remove_field => ["timestamp"]
    }
}
output {
    elasticsearch {
	index => "rsi_final-%{+YYYY.MM.dd}"
    }
    stdout {}
}

